# ArduSim configuration file
## Comments must begin with one or more '#' character

# Global parameters:
## Measure CPU usage during the experiment
MEASURECPU=false
## Verbose logging to ArduSim window and console
VERBOSELOGGING=false
## Verbose store. Allows to store additional files at will
VERBOSESTORE=true
## Allows to modify the yaw behavior while following a mission, with the next parameter value
YAWOVERRIDE=false
## 0=Fixed, 1=Face next waypoint, 2=Face next waypoint except RTL, 3=Face along GPS course
YAWVALUE=2

# KML files parameters (only for missions):
## (m) Minimum relative altitude for any waypoint
KMLMINALTITUDE=5
## Whether to override the altitude values included in the mission or not.
KMLOVERRIDEALTITUDE=false
## (m) If the altitude values are overriden, the relative altitude for all of them.
KMLALTITUDE=5
## Whether to add a land or RTL command at the end of the mission. Valid values: unmodified, land, or RTL.
KMLMISSIONEND=unmodified
## (m) Altitude where to stop the UAV when KMLMISSIONEND is assigned RTL value. If set to 0, it lands.
KMLRTLENDALTITUDE=0
## Mission delay over each waypoint (seconds).
KMLWAYPOINTDELAY=0
## (cm) Distance to waypoint to assert that it has been reached (centimeters), used only when WAYPOINTDELAY is greater than 0.
KMLWAYPOINTDISTANCE=200

# PCCompanion-to-realUAV and realUAV-to-realUAV communication parameters:
## Broadcast IP. It must match with the network configured on the Raspberry Pi
BROADCASTIP=192.168.1.255
## Port used by the UAVs, and where the PC Companion can listen to supervise the protocol communications among real UAVs. The PC Companion can even interact with the multicopters with the function "API.getCommLink(numUAV).receiveMessage()".
BROADCASTPORT=14650
## Port where the PC Companion receives internal coordination messages from the UAVs
COMPUTERPORT=5750
## Port where the UAV receives internal coordination messages from the PC Companion
UAVPORT=5755

# MANDATORY parameters when running in real UAVs (ignored on simulation or PC Companion):
## Protocol to be deployed.
UAVPROTOCOL=MBCAP
## (m/s) Maximum planned speed of the multicopter.
UAVSPEED=10

# Optional parameter for protocols that use the master-slave pattern.
## MAC addresses of the adapters of the master UAV (colon notation, and comma separated)
MACS=b8:27:eb:57:4c:0e,b8:27:eb:02:19:5b
## Safety strategy used for a safe takeoff (Optimal, Simplified, or Random).
TAKEOFFALGORITHM=Optimal

# Optional flight formation parameters (they are for protocols that use a flight formation):
## UAV flying formation. Used to set the flying layout.
AIRFORMATION=Linear
## (m) Minimum distance between contiguous UAVs in the flying formation. It must be an integer value in meters.
AIRDISTANCE=50
## (m) Minimum distance between contiguous UAVs for the landing phase.
LANDDISTANCE=2.5

# Optional ArduSim-to-flight controller communication parameters for real UAVs (default value is applied when ignored):
## Raspberry Pi serial port the flight controller is connected to.
SERIALPORT=/dev/ttyAMA0
## Baud rate of the serial link.
BAUDRATE=57600
# Battery parameters. Must be a LiPo battery:
## Number of cells.
BATTERYCELLS=4
## Capacity (mAh).
BATTERYCAPACITY=3300

# Optional simulation parameters:
## Bing key used to show aerial, hybrid, or street maps from Microsoft Bing.
BINGKEY=AtYaEzSRRgDuMBj64jlmSi3O74YskXNzbociE8kzr1thlDX7XzpXfkaM_c6nOz7u
